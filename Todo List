<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List App</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #ff6b6b, #4a90e2);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            color: #fff;
        }
        .container {
            background: rgba(255, 255, 255, 0.1);
            padding: 1.5rem;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 400px;
            text-align: center;
        }
        input {
            width: calc(100% - 80px);
            padding: 10px;
            border-radius: 8px;
            border: none;
            outline: none;
            font-size: 1rem;
            margin-right: 10px;
        }
        button {
            padding: 10px;
            border-radius: 8px;
            border: none;
            background: #ff4757;
            color: #fff;
            font-size: 1rem;
            cursor: pointer;
            transition: 0.3s;
        }
        button:hover {
            background: #e84118;
        }
        .task-list {
            margin-top: 20px;
        }
        .task {
            background: rgba(255, 255, 255, 0.2);
            padding: 10px;
            border-radius: 8px;
            margin-top: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: 0.3s;
        }
        .task:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        .completed {
            text-decoration: line-through;
            color: lightgray;
        }
        .buttons {
            display: flex;
            gap: 8px;
        }
        .edit, .delete {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.2rem;
            transition: 0.3s;
        }
        .edit:hover {
            color: #1e90ff;
        }
        .delete:hover {
            color: #ff4757;
        }
    </style>
</head>
<body>

    <div class="container">
        <h2>To-Do List</h2>
        <input type="text" id="taskInput" placeholder="Add a new task...">
        <button id="addTaskButton">Add</button>
        <div class="task-list" id="taskList"></div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const taskInput = document.getElementById("taskInput");
            const addTaskButton = document.getElementById("addTaskButton");
            const taskList = document.getElementById("taskList");

            let tasks = JSON.parse(localStorage.getItem("tasks")) || [];

            const saveTasks = () => {
                localStorage.setItem("tasks", JSON.stringify(tasks));
            };

            const renderTasks = () => {
                taskList.innerHTML = "";
                tasks.forEach((task, index) => {
                    const taskElement = document.createElement("div");
                    taskElement.classList.add("task");

                    if (task.completed) {
                        taskElement.classList.add("completed");
                    }

                    const taskText = document.createElement("span");
                    taskText.textContent = task.text;
                    taskText.classList.add("task-text");
                    taskText.addEventListener("click", () => {
                        tasks[index].completed = !tasks[index].completed;
                        saveTasks();
                        renderTasks();
                    });

                    const buttonsDiv = document.createElement("div");
                    buttonsDiv.classList.add("buttons");

                    const editButton = document.createElement("button");
                    editButton.innerHTML = "✏️";
                    editButton.classList.add("edit");
                    editButton.addEventListener("click", () => {
                        const newText = prompt("Edit Task:", task.text);
                        if (newText !== null && newText.trim() !== "") {
                            tasks[index].text = newText.trim();
                            saveTasks();
                            renderTasks();
                        }
                    });

                    const deleteButton = document.createElement("button");
                    deleteButton.innerHTML = "🗑";
                    deleteButton.classList.add("delete");
                    deleteButton.addEventListener("click", () => {
                        tasks.splice(index, 1);
                        saveTasks();
                        renderTasks();
                    });

                    buttonsDiv.appendChild(editButton);
                    buttonsDiv.appendChild(deleteButton);

                    taskElement.appendChild(taskText);
                    taskElement.appendChild(buttonsDiv);
                    taskList.appendChild(taskElement);
                });
            };

            addTaskButton.addEventListener("click", () => {
                const taskText = taskInput.value.trim();
                if (taskText === "" || tasks.some(task => task.text === taskText)) return;

                tasks.push({ text: taskText, completed: false });
                saveTasks();
                taskInput.value = "";
                renderTasks();
            });

            taskInput.addEventListener("keypress", (e) => {
                if (e.key === "Enter") {
                    addTaskButton.click();
                }
            });

            renderTasks();
        });
    </script>

</body>
</html>
